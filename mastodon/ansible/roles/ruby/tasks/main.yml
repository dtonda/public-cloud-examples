---
# tasks file for ruby
- name: Fetch Ruby version required by Mastodon
  ansible.builtin.command: "cat {{ mastodon_home }}/{{ mastodon_path }}/.ruby-version"
  register: ruby_version
  changed_when: ruby_version.rc != 0
- name: "Clone rbenv version {{ rbenv_version.stdout }}"
  ansible.builtin.git:
    repo: "https://github.com/rbenv/rbenv.git"
    dest: "~/.rbenv"
    clone: true
- name: Configure rbenv
  ansible.builtin.command: ./configure
  args:
    chdir: "~/.rbenv/src"
  register: configure_rbenv
  changed_when: configure_rbenv.rc != 0
- name: Build rbenv
  ansible.builtin.command: make
  args:
    chdir: "~/.rbenv/src"
  register: build_rbenv
  changed_when: build_rbenv.rc != 0
- name: Update profile settings
  ansible.builtin.blockinfile:
    path: "~/.bashrc"
    create: true
    mode: u+rw
    block: |
      export PATH="~/.rbenv/bin:${PATH}"
      eval "$(rbenv init -)"
- name: "Clone ruby build"
  ansible.builtin.git:
    repo: "https://github.com/rbenv/ruby-build.git"
    dest: "~/.rbenv/plugins/ruby-build"
    clone: true
- name: Check if the Ruby version is already installed
  ansible.builtin.shell: "~/.rbenv/bin/rbenv versions | grep -q 3.0.4"
  register: ruby_installed
  ignore_errors: true
  check_mode: false
  changed_when: ruby_installed.rc != 0
- name: Install Ruby 3.0.4
  ansible.builtin.shell: "RUBY_CONFIGURE_OPTS=--with-jemalloc ~/.rbenv/bin/rbenv install 3.0.4"
  args:
    executable: /bin/bash
  when: ruby_installed is failed
- name: Set global ruby version to 3.0.4
  ansible.builtin.shell: "~/.rbenv/bin/rbenv global 3.0.4"
  args:
    executable: /bin/bash
  register: set_global_ruby
  changed_when: set_global_ruby.rc != 0
